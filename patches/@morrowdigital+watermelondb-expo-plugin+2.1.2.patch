diff --git a/node_modules/@morrowdigital/watermelondb-expo-plugin/build/withWatermelon.js b/node_modules/@morrowdigital/watermelondb-expo-plugin/build/withWatermelon.js
index 4b6fbdc..80618b0 100644
--- a/node_modules/@morrowdigital/watermelondb-expo-plugin/build/withWatermelon.js
+++ b/node_modules/@morrowdigital/watermelondb-expo-plugin/build/withWatermelon.js
@@ -95,9 +95,26 @@ const withCocoaPods = (config) => {
                 const patchKey = "post_install";
                 const slicedContent = contents.split(patchKey);
                 slicedContent[0] += `\n
-  pod 'WatermelonDB', :path => '../node_modules/@nozbe/watermelondb'
-  pod 'React-jsi', :path => '../node_modules/react-native/ReactCommon/jsi', :modular_headers => true
-  pod 'simdjson', path: '../node_modules/@nozbe/simdjson', :modular_headers => true\n\n  `;
+                # Make sure Watermelon builds with useFrameworks: true, 
+                # required by some libraries, e.g react-native-firebase
+                # for more info: https://github.com/react-native-maps/react-native-maps/issues/3597#issuecomment-1168582636 \n
+                $static_pods = [ 
+                    'WatermelonDB',
+                    'simdjson',
+                ]
+                pre_install do |installer|
+                    Pod::Installer::Xcode::TargetValidator.send(:define_method, :verify_no_static_framework_transitive_dependencies) {}
+                        installer.pod_targets.each do |pod|
+                            if $static_pods.include?(pod.name)
+                                def pod.build_type;
+                                Pod::BuildType.static_library # >= 1.9
+                            end
+                        end
+                    end
+                end
+                pod 'WatermelonDB', :path => '../node_modules/@nozbe/watermelondb'
+                pod 'React-jsi', :path => '../node_modules/react-native/ReactCommon/jsi', :modular_headers => true
+                pod 'simdjson', path: '../node_modules/@nozbe/simdjson', modular_headers: true\n\n`;
                 await fs.writeFile(filePath, slicedContent.join(patchKey));
             }
             else {
